options:
  logging: CLOUD_LOGGING_ONLY
steps:
  # # Run tests and save to file
  # - name: golang:1.23
  #   entrypoint: /bin/bash
  #   args: 
  #     - -c
  #     - |
  #       go install github.com/jstemmer/go-junit-report/v2@latest
  #       2>&1 go test -timeout 1m -v ./... | /go/bin/go-junit-report -set-exit-code -iocopy -out ${SHORT_SHA}_test_log.xml
  
  # Docker Build
  - name: 'docker'
    args: ['build', '-t', 
           'gcr.io/${PROJECT_ID}/${REPO_NAME}/linkedin-profile-grabber:${SHORT_SHA}', '.']
  
  # Docker push to Google Artifact Registry
  - name: 'docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/${REPO_NAME}/linkedin-profile-grabber:${SHORT_SHA}']

  - name: 'docker'
    args: ['cp', 'gcr.io/${PROJECT_ID}/${REPO_NAME}/linkedin-profile-grabber:${SHORT_SHA}:coverage.out', '.']
  
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'linkedin-profile-grabber', 
           '--image=gcr.io/${PROJECT_ID}/${REPO_NAME}/linkedin-profile-grabber:${SHORT_SHA}', 
           '--region', 'us-east1', '--platform', 'managed']

# Save test logs to Google Cloud Storage
# artifacts:
#   objects:
#     location: gs://$_BUCKET_NAME/
#     paths:
#       - ${SHORT_SHA}_test_log.xml

# Store images in Google Artifact Registry
images:
  - gcr.io/${PROJECT_ID}/${REPO_NAME}/linkedin-profile-grabber:${SHORT_SHA}